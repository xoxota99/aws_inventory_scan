#!/usr/bin/env python3

# This file is part of aws_inventory_scan.
#
# aws_inventory_scan is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# aws_inventory_scan is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with aws_inventory_scan. If not, see <https://www.gnu.org/licenses/>.

# service_mappings.py
"""
Service mappings for AWS inventory scan.
Maps AWS service names to their API methods and response formats.
"""

SERVICE_MAPPINGS = {
    # Format: 'service_name': {'method': 'api_method_name', 'key': 'response_key_for_resources', 'id_attr': 'id_attribute', 'arn_format': 'arn_format_string'}
    'accessanalyzer': {'method': 'list_analyzers', 'key': 'analyzers', 'arn_attr': 'arn'},
    'acm': {'method': 'list_certificates', 'key': 'CertificateSummaryList', 'id_attr': 'CertificateArn', 'arn_attr': 'CertificateArn'},
    'acm-pca': {'method': 'list_certificate_authorities', 'key': 'CertificateAuthorities', 'arn_attr': 'Arn'},
    'amp': {'method': 'list_workspaces', 'key': 'workspaces', 'arn_attr': 'arn'},
    'amplify': {'method': 'list_apps', 'key': 'apps', 'arn_attr': 'appArn'},
    'apigateway': {'method': 'get_rest_apis', 'key': 'items', 'id_attr': 'id', 'arn_format': 'arn:aws:apigateway:{region}::/restapis/{id}'},
    'apigatewayv2': {'method': 'get_apis', 'key': 'Items', 'id_attr': 'ApiId', 'arn_format': 'arn:aws:apigateway:{region}::/apis/{id}'},
    'appconfig': {'method': 'list_applications', 'key': 'Items', 'id_attr': 'Id', 'arn_format': 'arn:aws:appconfig:{region}:{account_id}:application/{id}'},
    'appflow': {'method': 'list_flows', 'key': 'flows', 'arn_attr': 'flowArn'},
    'apprunner': {'method': 'list_services', 'key': 'ServiceSummaryList', 'arn_attr': 'ServiceArn'},
    'appstream': {'method': 'describe_fleets', 'key': 'Fleets', 'arn_attr': 'Arn'},
    'appsync': {'method': 'list_graphql_apis', 'key': 'graphqlApis', 'arn_attr': 'arn'},
    'athena': {'method': 'list_work_groups', 'key': 'WorkGroups', 'id_attr': 'Name', 'arn_format': 'arn:aws:athena:{region}:{account_id}:workgroup/{id}'},
    'auditmanager': {'method': 'list_assessments', 'key': 'assessmentMetadata', 'arn_attr': 'arn'},
    'autoscaling': {'method': 'describe_auto_scaling_groups', 'key': 'AutoScalingGroups', 'arn_attr': 'AutoScalingGroupARN'},
    'backup': {'method': 'list_backup_vaults', 'key': 'BackupVaultList', 'arn_attr': 'BackupVaultArn'},
    'batch': {'method': 'describe_job_queues', 'key': 'jobQueues', 'arn_attr': 'jobQueueArn'},
    'bedrock': {'method': 'list_custom_models', 'key': 'modelSummaries', 'arn_attr': 'modelArn'},
    'ce': {'method': 'get_cost_and_usage', 'key': 'ResultsByTime', 'custom': True},  # Requires special handling
    'chime': {'method': 'list_accounts', 'key': 'Accounts', 'arn_attr': 'AccountId', 'arn_format': 'arn:aws:chime::{account_id}:account/{id}'},
    'cloud9': {'method': 'list_environments', 'key': 'environmentIds', 'id_list': True, 'arn_format': 'arn:aws:cloud9:{region}:{account_id}:environment/{id}'},
    'cloudfront': {'method': 'list_distributions', 'key': 'DistributionList.Items', 'arn_attr': 'ARN'},
    'cloudhsm': {'method': 'list_hsms', 'key': 'HsmList', 'id_attr': 'HsmArn', 'arn_attr': 'HsmArn'},
    'cloudsearch': {'method': 'describe_domains', 'key': 'DomainStatusList', 'arn_attr': 'ARN'},
    'cloudformation': {'method': 'list_stacks', 'key': 'StackSummaries', 'arn_attr': 'StackId'},
    'codeartifact': {'method': 'list_domains', 'key': 'domains', 'id_attr': 'name', 'arn_format': 'arn:aws:codeartifact:{region}:{account_id}:domain/{id}'},
    'codebuild': {'method': 'list_projects', 'key': 'projects', 'id_list': True, 'arn_format': 'arn:aws:codebuild:{region}:{account_id}:project/{id}'},
    'codecommit': {'method': 'list_repositories', 'key': 'repositories', 'arn_attr': 'repositoryId', 'arn_format': 'arn:aws:codecommit:{region}:{account_id}:repository/{id}'},
    'codedeploy': {'method': 'list_applications', 'key': 'applications', 'id_list': True, 'arn_format': 'arn:aws:codedeploy:{region}:{account_id}:application:{id}'},
    'codepipeline': {'method': 'list_pipelines', 'key': 'pipelines', 'id_attr': 'name', 'arn_format': 'arn:aws:codepipeline:{region}:{account_id}:{id}'},
    'cognito-identity': {'method': 'list_identity_pools', 'key': 'IdentityPools', 'id_attr': 'IdentityPoolId', 'arn_format': 'arn:aws:cognito-identity:{region}:{account_id}:identitypool/{id}'},
    'cognito-idp': {'method': 'list_user_pools', 'key': 'UserPools', 'id_attr': 'Id', 'arn_format': 'arn:aws:cognito-idp:{region}:{account_id}:userpool/{id}'},
    'comprehend': {'method': 'list_document_classifiers', 'key': 'DocumentClassifierPropertiesList', 'arn_attr': 'DocumentClassifierArn'},
    'config': {'method': 'describe_config_rules', 'key': 'ConfigRules', 'arn_attr': 'ConfigRuleArn'},
    'connect': {'method': 'list_instances', 'key': 'InstanceSummaryList', 'id_attr': 'Id', 'arn_format': 'arn:aws:connect:{region}:{account_id}:instance/{id}'},
    'datasync': {'method': 'list_tasks', 'key': 'Tasks', 'arn_attr': 'TaskArn'},
    'dax': {'method': 'describe_clusters', 'key': 'Clusters', 'arn_attr': 'ClusterArn'},
    'detective': {'method': 'list_graphs', 'key': 'GraphList', 'arn_attr': 'Arn'},
    'devicefarm': {'method': 'list_projects', 'key': 'projects', 'arn_attr': 'arn'},
    'directconnect': {'method': 'describe_connections', 'key': 'connections', 'id_attr': 'connectionId', 'arn_format': 'arn:aws:directconnect:{region}:{account_id}:dxcon/{id}'},
    'dlm': {'method': 'get_lifecycle_policies', 'key': 'Policies', 'id_attr': 'PolicyId', 'arn_format': 'arn:aws:dlm:{region}:{account_id}:policy/{id}'},
    'dms': {'method': 'describe_replication_instances', 'key': 'ReplicationInstances', 'arn_attr': 'ReplicationInstanceArn'},
    'docdb': {'method': 'describe_db_clusters', 'key': 'DBClusters', 'arn_attr': 'DBClusterArn'},
    'ds': {'method': 'describe_directories', 'key': 'DirectoryDescriptions', 'id_attr': 'DirectoryId', 'arn_format': 'arn:aws:ds:{region}:{account_id}:directory/{id}'},
    'dynamodb': {'method': 'list_tables', 'key': 'TableNames', 'id_list': True, 'arn_format': 'arn:aws:dynamodb:{region}:{account_id}:table/{id}'},
    'eks': {'method': 'list_clusters', 'key': 'clusters', 'id_list': True, 'arn_format': 'arn:aws:eks:{region}:{account_id}:cluster/{id}'},
    'elasticache': {'method': 'describe_cache_clusters', 'key': 'CacheClusters', 'arn_attr': 'ARN'},
    'elasticbeanstalk': {'method': 'describe_applications', 'key': 'Applications', 'id_attr': 'ApplicationName', 'arn_format': 'arn:aws:elasticbeanstalk:{region}:{account_id}:application/{id}'},
    'elastictranscoder': {'method': 'list_pipelines', 'key': 'Pipelines', 'id_attr': 'Id', 'arn_format': 'arn:aws:elastictranscoder:{region}:{account_id}:pipeline/{id}'},
    'elb': {'method': 'describe_load_balancers', 'key': 'LoadBalancerDescriptions', 'id_attr': 'LoadBalancerName', 'arn_format': 'arn:aws:elasticloadbalancing:{region}:{account_id}:loadbalancer/{id}'},
    'elbv2': {'method': 'describe_load_balancers', 'key': 'LoadBalancers', 'arn_attr': 'LoadBalancerArn'},
    'emr': {'method': 'list_clusters', 'key': 'Clusters', 'id_attr': 'Id', 'arn_format': 'arn:aws:elasticmapreduce:{region}:{account_id}:cluster/{id}'},
    'es': {'method': 'list_domain_names', 'key': 'DomainNames', 'id_attr': 'DomainName', 'arn_format': 'arn:aws:es:{region}:{account_id}:domain/{id}'},
    'events': {'method': 'list_event_buses', 'key': 'EventBuses', 'arn_attr': 'Arn'},
    'firehose': {'method': 'list_delivery_streams', 'key': 'DeliveryStreamNames', 'id_list': True, 'arn_format': 'arn:aws:firehose:{region}:{account_id}:deliverystream/{id}'},
    'fsx': {'method': 'describe_file_systems', 'key': 'FileSystems', 'arn_attr': 'ResourceARN'},
    'gamelift': {'method': 'list_fleets', 'key': 'FleetIds', 'id_list': True, 'arn_format': 'arn:aws:gamelift:{region}:{account_id}:fleet/{id}'},
    'glacier': {'method': 'list_vaults', 'key': 'VaultList', 'arn_attr': 'VaultARN'},
    'glue': {'method': 'get_databases', 'key': 'DatabaseList', 'id_attr': 'Name', 'arn_format': 'arn:aws:glue:{region}:{account_id}:database/{id}'},
    'greengrass': {'method': 'list_groups', 'key': 'Groups', 'id_attr': 'Id', 'arn_format': 'arn:aws:greengrass:{region}:{account_id}:/greengrass/groups/{id}'},
    'guardduty': {'method': 'list_detectors', 'key': 'DetectorIds', 'id_list': True, 'arn_format': 'arn:aws:guardduty:{region}:{account_id}:detector/{id}'},
    'health': {'method': 'describe_events', 'key': 'events', 'custom': True},  # Requires special handling
    'imagebuilder': {'method': 'list_image_pipelines', 'key': 'imagePipelineList', 'arn_attr': 'arn'},
    'inspector': {'method': 'list_assessment_templates', 'key': 'assessmentTemplateArns', 'arn_list': True},
    'inspector2': {'method': 'list_findings', 'key': 'findings', 'arn_attr': 'findingArn'},
    'iot': {'method': 'list_things', 'key': 'things', 'id_attr': 'thingName', 'arn_format': 'arn:aws:iot:{region}:{account_id}:thing/{id}'},
    'kafka': {'method': 'list_clusters', 'key': 'ClusterInfoList', 'arn_attr': 'ClusterArn'},
    'kendra': {'method': 'list_indices', 'key': 'IndexConfigurationSummaryItems', 'id_attr': 'Id', 'arn_format': 'arn:aws:kendra:{region}:{account_id}:index/{id}'},
    'keyspaces': {'method': 'list_keyspaces', 'key': 'keyspaces', 'id_attr': 'keyspaceName', 'arn_format': 'arn:aws:cassandra:{region}:{account_id}:/keyspace/{id}'},
    'kinesis': {'method': 'list_streams', 'key': 'StreamNames', 'id_list': True, 'arn_format': 'arn:aws:kinesis:{region}:{account_id}:stream/{id}'},
    'kinesisvideo': {'method': 'list_streams', 'key': 'StreamInfoList', 'arn_attr': 'StreamARN'},
    'kinesisanalytics': {'method': 'list_applications', 'key': 'ApplicationSummaries', 'id_attr': 'ApplicationName', 'arn_format': 'arn:aws:kinesisanalytics:{region}:{account_id}:application/{id}'},
    'kinesisanalyticsv2': {'method': 'list_applications', 'key': 'ApplicationSummaries', 'id_attr': 'ApplicationName', 'arn_format': 'arn:aws:kinesisanalytics:{region}:{account_id}:application/KinesisAnalyticsApplication/{id}'},
    'lambda': {'method': 'list_functions', 'key': 'Functions', 'arn_attr': 'FunctionArn'},
    'lakeformation': {'method': 'list_resources', 'key': 'ResourceInfoList', 'arn_attr': 'ResourceArn'},
    'lex-models': {'method': 'get_bots', 'key': 'bots', 'id_attr': 'name', 'arn_format': 'arn:aws:lex:{region}:{account_id}:bot:{id}'},
    'lightsail': {'method': 'get_instances', 'key': 'instances', 'arn_attr': 'arn'},
    'mediaconvert': {'method': 'list_queues', 'key': 'Queues', 'arn_attr': 'Arn'},
    'mediapackage': {'method': 'list_channels', 'key': 'Channels', 'id_attr': 'Id', 'arn_format': 'arn:aws:mediapackage:{region}:{account_id}:channels/{id}'},
    'mediatailor': {'method': 'list_playback_configurations', 'key': 'Items', 'id_attr': 'Name', 'arn_format': 'arn:aws:mediatailor:{region}:{account_id}:playbackConfiguration/{id}'},
    'memorydb': {'method': 'describe_clusters', 'key': 'Clusters', 'arn_attr': 'ARN'},
    'mq': {'method': 'list_brokers', 'key': 'BrokerSummaries', 'id_attr': 'BrokerId', 'arn_format': 'arn:aws:mq:{region}:{account_id}:broker:{id}'},
    'neptune': {'method': 'describe_db_clusters', 'key': 'DBClusters', 'arn_attr': 'DBClusterArn'},
    'network-firewall': {'method': 'list_firewalls', 'key': 'Firewalls', 'arn_attr': 'FirewallArn'},
    'networkmanager': {'method': 'describe_global_networks', 'key': 'GlobalNetworks', 'arn_attr': 'GlobalNetworkArn'},
    'opensearch': {'method': 'list_domain_names', 'key': 'DomainNames', 'id_attr': 'DomainName', 'arn_format': 'arn:aws:es:{region}:{account_id}:domain/{id}'},
    'opsworks': {'method': 'describe_stacks', 'key': 'Stacks', 'arn_attr': 'Arn'},
    'organizations': {'method': 'list_accounts', 'key': 'Accounts', 'id_attr': 'Id', 'arn_format': 'arn:aws:organizations::{account_id}:account/{id}'},
    'pinpoint': {'method': 'get_apps', 'key': 'ApplicationsResponse.Item', 'id_attr': 'Id', 'arn_format': 'arn:aws:mobiletargeting:{region}:{account_id}:apps/{id}'},
    'polly': {'method': 'list_lexicons', 'key': 'Lexicons', 'id_attr': 'Name', 'arn_format': 'arn:aws:polly:{region}:{account_id}:lexicon/{id}'},
    'qldb': {'method': 'list_ledgers', 'key': 'Ledgers', 'id_attr': 'Name', 'arn_format': 'arn:aws:qldb:{region}:{account_id}:ledger/{id}'},
    'quicksight': {'method': 'list_dashboards', 'key': 'DashboardSummaryList', 'arn_attr': 'Arn'},
    'ram': {'method': 'list_resources', 'key': 'resources', 'arn_attr': 'arn'},
    'redshift': {'method': 'describe_clusters', 'key': 'Clusters', 'arn_attr': 'ClusterNamespaceArn'},
    'rds': {'method': 'describe_db_instances', 'key': 'DBInstances', 'arn_attr': 'DBInstanceArn'},
    'rekognition': {'method': 'list_collections', 'key': 'CollectionIds', 'id_list': True, 'arn_format': 'arn:aws:rekognition:{region}:{account_id}:collection/{id}'},
    'resource-groups': {'method': 'list_groups', 'key': 'Groups', 'arn_attr': 'GroupArn'},
    'robomaker': {'method': 'list_robot_applications', 'key': 'robotApplicationSummaries', 'arn_attr': 'arn'},
    'route53resolver': {'method': 'list_resolver_endpoints', 'key': 'ResolverEndpoints', 'id_attr': 'Id', 'arn_format': 'arn:aws:route53resolver:{region}:{account_id}:resolver-endpoint/{id}'},
    'sagemaker': {'method': 'list_models', 'key': 'Models', 'id_attr': 'ModelName', 'arn_format': 'arn:aws:sagemaker:{region}:{account_id}:model/{id}'},
    'schemas': {'method': 'list_registries', 'key': 'Registries', 'arn_attr': 'RegistryArn'},
    'secretsmanager': {'method': 'list_secrets', 'key': 'SecretList', 'arn_attr': 'ARN'},
    'securityhub': {'method': 'describe_hub', 'key': 'HubArn', 'direct_arn': True},
    'serverlessrepo': {'method': 'list_applications', 'key': 'Applications', 'arn_attr': 'ApplicationId', 'arn_format': 'arn:aws:serverlessrepo:{region}:{account_id}:applications/{id}'},
    'servicecatalog': {'method': 'list_portfolios', 'key': 'PortfolioDetails', 'id_attr': 'Id', 'arn_format': 'arn:aws:catalog:{region}:{account_id}:portfolio/{id}'},
    'servicediscovery': {'method': 'list_services', 'key': 'Services', 'id_attr': 'Id', 'arn_format': 'arn:aws:servicediscovery:{region}:{account_id}:service/{id}'},
    'ses': {'method': 'list_identities', 'key': 'Identities', 'id_list': True, 'arn_format': 'arn:aws:ses:{region}:{account_id}:identity/{id}'},
    'shield': {'method': 'list_protections', 'key': 'Protections', 'id_attr': 'Id', 'arn_format': 'arn:aws:shield:{region}:{account_id}:protection/{id}'},
    'sns': {'method': 'list_topics', 'key': 'Topics', 'arn_attr': 'TopicArn'},
    'signer': {'method': 'list_signing_profiles', 'key': 'profiles', 'arn_attr': 'arn'},
    'stepfunctions': {'method': 'list_state_machines', 'key': 'stateMachines', 'arn_attr': 'stateMachineArn'},
    'storagegateway': {'method': 'list_gateways', 'key': 'Gateways', 'arn_attr': 'GatewayARN'},
    'textract': {'method': 'get_document_analysis', 'key': 'DocumentMetadata', 'custom': True},  # Requires special handling
    'timestream-query': {'method': 'list_databases', 'key': 'Databases', 'arn_attr': 'Arn'},
    'transfer': {'method': 'list_servers', 'key': 'Servers', 'arn_attr': 'Arn'},
    'translate': {'method': 'list_terminologies', 'key': 'TerminologyPropertiesList', 'arn_attr': 'TerminologyArn'},
    'waf': {'method': 'list_rules', 'key': 'Rules', 'id_attr': 'RuleId', 'arn_format': 'arn:aws:waf::{account_id}:rule/{id}'},
    'waf-regional': {'method': 'list_rules', 'key': 'Rules', 'id_attr': 'RuleId', 'arn_format': 'arn:aws:waf-regional:{region}:{account_id}:rule/{id}'},
    'wafv2': {'method': 'list_web_acls', 'key': 'WebACLs', 'arn_attr': 'ARN'},
    'workspaces': {'method': 'describe_workspaces', 'key': 'Workspaces', 'id_attr': 'WorkspaceId', 'arn_format': 'arn:aws:workspaces:{region}:{account_id}:workspace/{id}'},
    'xray': {'method': 'get_groups', 'key': 'Groups', 'arn_attr': 'GroupARN'},
}